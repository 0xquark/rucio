name: Build Runtime Images

on:
  workflow_call:
    inputs:
      python_versions:
        description: 'Python versions to build images for'
        required: false
        default: '["3.9", "3.10"]'
        type: string
    outputs:
      py39_image:
        description: "Python 3.9 runtime image tag"
        value: ${{ jobs.build_runtime_images.outputs.py39_image }}
      py310_image:
        description: "Python 3.10 runtime image tag"
        value: ${{ jobs.build_runtime_images.outputs.py310_image }}
  workflow_dispatch:
    inputs:
      python_versions:
        description: 'Python versions to build images for (JSON array)'
        required: false
        default: '["3.9", "3.10"]'
        type: string
  push:
    branches:
      - master
    paths:
      - 'requirements/**'
      - 'etc/docker/test/runtime.Dockerfile'

jobs:
  build_runtime_images:
    name: Build Runtime Images
    runs-on: ubuntu-latest
    outputs:
      py39_image: ${{ steps.build_images.outputs.py39_image }}
      py310_image: ${{ steps.build_images.outputs.py310_image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse Python versions
        id: parse_versions
        run: |
          PYTHON_VERSIONS='${{ inputs.python_versions }}'
          echo "Python versions: $PYTHON_VERSIONS"
          
          # Check if 3.9 is in the list
          if echo "$PYTHON_VERSIONS" | grep -q "3.9"; then
            echo "build_py39=true" >> $GITHUB_OUTPUT
          else
            echo "build_py39=false" >> $GITHUB_OUTPUT
          fi
          
          # Check if 3.10 is in the list
          if echo "$PYTHON_VERSIONS" | grep -q "3.10"; then
            echo "build_py310=true" >> $GITHUB_OUTPUT
          else
            echo "build_py310=false" >> $GITHUB_OUTPUT
          fi

      - name: Calculate cache keys
        id: cache_keys
        run: |
          # Calculate hash for Python 3.9 image
          PY39_HASH=$(find requirements -type f -name "*.txt" -print0 | sort -z | xargs -0 sha256sum | sha256sum | cut -d' ' -f1)
          PY39_HASH="${PY39_HASH}$(sha256sum etc/docker/test/runtime.Dockerfile | cut -d' ' -f1)"
          PY39_HASH=$(echo $PY39_HASH | sha256sum | cut -d' ' -f1 | cut -c1-12)
          echo "py39_hash=$PY39_HASH" >> $GITHUB_OUTPUT
          
          # Calculate hash for Python 3.10 image
          PY310_HASH=$(find requirements -type f -name "*.txt" -print0 | sort -z | xargs -0 sha256sum | sha256sum | cut -d' ' -f1)
          PY310_HASH="${PY310_HASH}$(sha256sum etc/docker/test/runtime.Dockerfile | cut -d' ' -f1)"
          PY310_HASH=$(echo $PY310_HASH | sha256sum | cut -d' ' -f1 | cut -c1-12)
          echo "py310_hash=$PY310_HASH" >> $GITHUB_OUTPUT

      - name: Set image tags
        id: set_tags
        run: |
          echo "py39_image=ghcr.io/${{ github.repository }}/rucio-dev-runtime:py39-${{ steps.cache_keys.outputs.py39_hash }}" >> $GITHUB_OUTPUT
          echo "py310_image=ghcr.io/${{ github.repository }}/rucio-dev-runtime:py310-${{ steps.cache_keys.outputs.py310_hash }}" >> $GITHUB_OUTPUT

      - name: Check if Python 3.9 image exists
        id: check_py39
        if: steps.parse_versions.outputs.build_py39 == 'true'
        continue-on-error: true
        run: |
          docker manifest inspect ${{ steps.set_tags.outputs.py39_image }} > /dev/null
          echo "exists=$?" >> $GITHUB_OUTPUT

      - name: Check if Python 3.10 image exists
        id: check_py310
        if: steps.parse_versions.outputs.build_py310 == 'true'
        continue-on-error: true
        run: |
          docker manifest inspect ${{ steps.set_tags.outputs.py310_image }} > /dev/null
          echo "exists=$?" >> $GITHUB_OUTPUT

      - name: Build and push Python 3.9 image
        if: steps.parse_versions.outputs.build_py39 == 'true' && steps.check_py39.outputs.exists != '0'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: etc/docker/test/runtime.Dockerfile
          push: true
          tags: ${{ steps.set_tags.outputs.py39_image }}
          build-args: |
            PYTHON=3.9
          cache-from: type=registry,ref=${{ steps.set_tags.outputs.py39_image }}
          cache-to: type=inline

      - name: Build and push Python 3.10 image
        if: steps.parse_versions.outputs.build_py310 == 'true' && steps.check_py310.outputs.exists != '0'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: etc/docker/test/runtime.Dockerfile
          push: true
          tags: ${{ steps.set_tags.outputs.py310_image }}
          build-args: |
            PYTHON=3.10
          cache-from: type=registry,ref=${{ steps.set_tags.outputs.py310_image }}
          cache-to: type=inline

      - name: Output image tags
        id: build_images
        run: |
          echo "py39_image=${{ steps.set_tags.outputs.py39_image }}" >> $GITHUB_OUTPUT
          echo "py310_image=${{ steps.set_tags.outputs.py310_image }}" >> $GITHUB_OUTPUT
